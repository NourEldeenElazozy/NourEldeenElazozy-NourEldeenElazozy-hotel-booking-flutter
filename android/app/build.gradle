plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services" // إضافة Google services Gradle plugin هنا

}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.esteraha"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.esteraha"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    // تبعيات Flutter القياسية (عادة ما تكون موجودة بالفعل أو تدار بواسطة Flutter)
    // لا تقم بتغيير السطور التي تبدأ بـ "implementation(flutter..." إذا كانت موجودة

    // ** هنا نبدأ بإضافة تبعيات Firebase **

    // استخدام Firebase BoM (Bill of Materials) لإدارة إصدارات المكتبات يوصى به بشدة
    // هذا السطر سيضمن أن جميع مكتبات Firebase التي تضيفها تستخدم إصدارات متوافقة
    implementation(platform("com.google.firebase:firebase-bom:32.7.0")) // ✅ أضف هذا السطر ✅
    // (يمكنك التحقق من وثائق Firebase لأحدث إصدار مستقر من BoM)



    // Firebase Remote Config - المكتبة لـ Remote Config
    implementation("com.google.firebase:firebase-config-ktx") // ✅ أضف هذا السطر ✅
    // (نستخدم -ktx هنا إذا كنت تستخدم Kotlin، وإلا استخدم firebase-config)

    // Firebase Analytics - موصى به بشدة مع Remote Config للميزات المتقدمة مثل الاستهداف
    implementation("com.google.firebase:firebase-analytics-ktx") // ✅ أضف هذا السطر ✅
    // (نستخدم -ktx هنا إذا كنت تستخدم Kotlin، وإلا استخدم firebase-analytics)

    // ** يمكنك إضافة تبعيات مكتبات Firebase الأخرى هنا حسب الحاجة **
    // على سبيل المثال:
    // implementation("com.google.firebase:firebase-auth-ktx") // للمصادقة
    // implementation("com.google.firebase:firebase-firestore-ktx") // لـ Cloud Firestore

} // ✅ تأكد أن هذه القوس هي نهاية كتلة التبعيات ✅
